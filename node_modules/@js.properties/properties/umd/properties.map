{"version":3,"sources":["webpack://Properties/webpack/universalModuleDefinition","webpack://Properties/webpack/bootstrap","webpack://Properties/./src/index.js","webpack://Properties/./src/options.js","webpack://Properties/./src/parse-to-entries.js","webpack://Properties/./src/parse-to-properties.js","webpack://Properties/./src/properties.pegjs","webpack://Properties/./src/stringify.js"],"names":["exports","parseOptions","options","availableOptionNames","option","parseToEntriesOptions","parseToEntries","input","PropertiesParser","parseToPropertiesOptions","parse","parseToProperties","entries","entriesToProperties","properties","entry","key","element","unescapeProperty","namespace","namespacedKey","parseNamespace","property","forEach","name","i","length","output","replace","match","code","SyntaxError","String","fromCharCode","parseInt","escaped","split","peg$subclass","child","parent","ctor","constructor","prototype","peg$SyntaxError","message","expected","found","location","Error","captureStackTrace","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","describeExpectation","type","describeExpected","descriptions","j","sort","slice","join","describeFound","peg$parse","peg$FAILED","peg$startRuleFunctions","PropertiesFile","peg$parsePropertiesFile","peg$startRuleFunction","peg$c0","lines","trailing","push","filter","x","undefined","peg$c1","line","eol","peg$c2","indent","all","sep","original","peg$c3","start","offset","peg$c4","peg$c5","peg$otherExpectation","peg$c6","peg$c7","peg$classExpectation","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","a","peg$c13","peg$c14","peg$c15","b","peg$c16","peg$c17","v","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","c","peg$c29","peg$c30","peg$c31","peg$literalExpectation","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$anyExpectation","peg$c39","peg$currPos","peg$savedPos","peg$posDetailsCache","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","peg$computeLocation","peg$buildStructuredError","error","peg$buildSimpleError","ignoreCase","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","peg$fail","s0","s1","s2","peg$parseFullLine","peg$parseTrailingLine","peg$parseLine","peg$parseNL","s3","s4","s5","peg$parse_","peg$parseCONT","peg$parseComment","peg$parsePropertyEntry","peg$parseCommentCharacter","peg$parseC","test","charAt","peg$parsePropertyKey","peg$parseKeyElementSeparator","peg$parsePropertyElement","peg$parseESCAPE","peg$parseWS","substr","module","stringify","stringifyFromEntries","stringifyFromProperties","noeol","detectedEol","escapeKey","escapeElement"],"mappings":"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","file":"properties.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Properties\"] = factory();\n\telse\n\t\troot[\"Properties\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export * from './parse-to-entries';\nexport * from './parse-to-properties';\nexport * from './stringify';\n\n// Export everything this module exports as a default export\nexport default exports;\n","/**\n * Normalize options.\n * @param {*} options Options to be parsed; it can be object, boolean, null or undefined.\n * @param {!Array<string>} availableOptionNames All possible option names.\n * @returns {object} Normalized options.\n */\nexport function parseOptions(options, availableOptionNames) {\n  // Fix `null`, `false` as the options\n  options = options || {};\n\n  // `true` is a shortcut to turn all options on\n  if (options === true) {\n    options = {};\n    for (const option of availableOptionNames) {\n      options[option] = true;\n    }\n    return options;\n  }\n\n  // { '': true } is also a shorcut to turn all options on, while allow\n  // individual options to be turned off by setting them explicitly.\n  if (typeof options[''] === 'boolean') {\n    for (const option of availableOptionNames) {\n      if (!(option in options)) {\n        options[option] = options[''];\n      }\n    }\n  }\n\n  return options;\n}\n","// Import PEG.js generated parser through pegjs-loader\nimport * as PropertiesParser from './properties.pegjs';\nimport { parseOptions } from './options';\n\n\nconst parseToEntriesOptions = [\n  'all',        // Include empty and blank lines\n  'sep',        // Include separator in output\n  'indent',     // Include indentation in output\n  'eol',        // Include eol (end of line) in output\n  'original',   // Include original logical line in output\n  'location',   // Include location info in output\n];\n\n\n/**\n * Parse .properties file content to an array of object containing key, element,\n * and optionally original line and location.\n * @param {string} input Properties file content in string.\n * @param {*} [options] Options for parsing.\n * @returns {Array} Parsed result in array.\n */\nexport function parseToEntries(input, options) {\n  options = parseOptions(options, parseToEntriesOptions);\n  return PropertiesParser.parse(input, options);\n}\n","import { parseToEntries } from './parse-to-entries';\nimport { parseOptions } from './options';\n\n\nconst parseToPropertiesOptions = [\n  'namespace',  // Parse dot separated keys as namespaced\n];\n\n\n/**\n * Parse .properties file content to a properties object, with property key as\n * the key and property element as the value.\n *\n * Alias of parseToProperties\n *\n * @param {string} input Properties file content in string.\n * @param {*} [options] Options for parsing.\n * @returns {object} Parsed result in properties object.\n */\nexport function parse(input, options) {\n  return parseToProperties(input, options);\n}\n\n/**\n * Parse .properties file content to a properties object, with property key as\n * the key and property element as the value.\n * @param {string} input Properties file content in string.\n * @param {*} [options] Options for parsing.\n * @returns {object} Parsed result in properties object.\n */\nexport function parseToProperties(input, options) {\n  const entries = parseToEntries(input);\n  return entriesToProperties(entries, options);\n}\n\n/**\n * Convert parsed entries to a properties object.\n * @param {Array} entries Entries to be converted.\n * @param {Object} [options] Options for converting\n * @returns {object} Converted properties object.\n */\nexport function entriesToProperties(entries, options) {\n  options = parseOptions(options, parseToPropertiesOptions);\n  const properties = {};\n\n  for (const entry of entries) {\n    // Only key and element are relevant\n    let { key, element } = entry;\n\n    // Blank and comment lines are ignored\n    if (key === null) continue;\n\n    // Parsed array adheres to what user authored,\n    // while in properties, we need to unescape backslashes.\n    key = unescapeProperty(key);\n    element = unescapeProperty(element);\n\n    // Assign to properties by key, later entries overwrite previous ones\n    if (options.namespace) {\n      const namespacedKey = parseNamespace(key);\n      let property = properties;\n      namespacedKey.forEach((name, i) => {\n        // This is the last component of the key\n        if (i === namespacedKey.length - 1) {\n          property[name] = element;\n          return;\n        }\n\n        // This is part of the namespace\n        if (name in property) {\n          // Namespace itself and keys under it may all have values\n          // e.g. \"foo = bar\" \"foo.qux = quux\"\n          if (typeof property[name] === 'string') {\n            // Make value of namespace a value of an empty key under the\n            // namespace\n            property[name] = { '': property[name] };\n          }\n        } else {\n          property[name] = {};\n        }\n        property = property[name];\n      });\n    } else {\n      properties[key] = element;\n    }\n  }\n\n  return properties;\n}\n\n\n/**\n * Unescape backslash escaped sequences.\n * @param {string} input String to be mutated.\n * @returns {string} Unescaped input.\n * @throws {SyntaxError} Invalid Unicode escape sequence\n */\nfunction unescapeProperty(input) {\n  // Unescape unicode\n  const output = input.replace(/\\\\u([0-9A-Fa-f]{0,4})/g, (match, code) => {\n    if (code.length !== 4) throw new SyntaxError('Invalid Unicode escape sequence');\n    return String.fromCharCode(parseInt(code, 16));\n  });\n\n  // Unescape other single character\n  return output.replace(/\\\\(.)/g, (match, escaped) => {\n    switch (escaped) {\n      case 'f': return '\\f';\n      case 'n': return '\\n';\n      case 'r': return '\\r';\n      case 't': return '\\t';\n      default: return escaped;\n    }\n  });\n}\n\n/**\n * Turn dot separated string into an array of relevant components.\n * @param {string} key The dot separated string.\n * @returns {Array} Array of key components.\n */\nfunction parseNamespace(key) {\n  return key.split('.');\n}\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { PropertiesFile: peg$parsePropertiesFile },\n      peg$startRuleFunction  = peg$parsePropertiesFile,\n\n      peg$c0 = function(lines, trailing) {\n            // Add the trailing line, i.e. line without eol\n            if (trailing) lines.push(trailing);\n            // Filter out blank and comment lines\n            return lines.filter(x => x !== undefined);\n          },\n      peg$c1 = function(line, eol) {\n            if (!line) return;\n            if (options.eol) line.eol = eol;\n            return line;\n          },\n      peg$c2 = function(indent, line) {\n            if (!line) {\n              if (options.all) {\n                line = { key: null, element: null };\n                if (options.sep) line.sep = null;\n              } else {\n                return undefined;\n              }\n            }\n\n            if (options.indent) line.indent = indent;\n            if (options.eol) line.eol = null;\n            if (options.original) line.original = text();\n            if (options.location) line.location = location();\n\n            return line;\n          },\n      peg$c3 = function(line) {\n            // If the offset of start and end match, there is actually no trailing\n            // line; TrailingLine is matched in this case because a line itself\n            // (not counting eol) may contain no characters.\n            return location().start.offset === location().end.offset ?\n                undefined : line;\n          },\n      peg$c4 = function() {},\n      peg$c5 = peg$otherExpectation(\"CommentCharacter\"),\n      peg$c6 = /^[#!]/,\n      peg$c7 = peg$classExpectation([\"#\", \"!\"], false, false),\n      peg$c8 = function(key, sep, element) {\n            // Blank Line:\n            // No need to test element, as whenever there is an element, there is a separator.\n            // Note: Key and element can be empty at the same time.\n            if (!key && !sep) return;\n\n            // Property Entry:\n            // Return an empty string for key and/or element if empty.\n            var property = { key: key || \"\", element: element || \"\" };\n            if (options.sep) property.sep = sep;\n            return property;\n          },\n      peg$c9 = peg$otherExpectation(\"PropertyKey\"),\n      peg$c10 = /^[^\\r\\n\\\\:=]/,\n      peg$c11 = peg$classExpectation([\"\\r\", \"\\n\", \"\\\\\", \":\", \"=\"], true, false),\n      peg$c12 = function(a) {},\n      peg$c13 = /^[^ \\t\\f\\r\\n\\\\:=]/,\n      peg$c14 = peg$classExpectation([\" \", \"\\t\", \"\\f\", \"\\r\", \"\\n\", \"\\\\\", \":\", \"=\"], true, false),\n      peg$c15 = function(a, b) { return a + b.join(''); },\n      peg$c16 = peg$otherExpectation(\"PropertyElement\"),\n      peg$c17 = function(v) { return v.join(''); },\n      peg$c18 = peg$otherExpectation(\"KeyElementSeparator\"),\n      peg$c19 = /^[:=]/,\n      peg$c20 = peg$classExpectation([\":\", \"=\"], false, false),\n      peg$c21 = peg$otherExpectation(\"White Space\"),\n      peg$c22 = /^[ \\t\\f]/,\n      peg$c23 = peg$classExpectation([\" \", \"\\t\", \"\\f\"], false, false),\n      peg$c24 = peg$otherExpectation(\"White Spaces\"),\n      peg$c25 = peg$otherExpectation(\"Character\"),\n      peg$c26 = /^[^\\r\\n]/,\n      peg$c27 = peg$classExpectation([\"\\r\", \"\\n\"], true, false),\n      peg$c28 = function(c) {\n            // Ignore final dangling backslash\n            return c === \"\\\\\" ? undefined : c;\n          },\n      peg$c29 = peg$otherExpectation(\"Line Terminator\"),\n      peg$c30 = \"\\r\\n\",\n      peg$c31 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c32 = /^[\\n\\r]/,\n      peg$c33 = peg$classExpectation([\"\\n\", \"\\r\"], false, false),\n      peg$c34 = peg$otherExpectation(\"Line Continuation\"),\n      peg$c35 = \"\\\\\",\n      peg$c36 = peg$literalExpectation(\"\\\\\", false),\n      peg$c37 = peg$otherExpectation(\"Escape Sequence\"),\n      peg$c38 = peg$anyExpectation(),\n      peg$c39 = function() { return text(); },\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsePropertiesFile() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseFullLine();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseFullLine();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTrailingLine();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFullLine() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLine();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNL();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLine() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    s3 = peg$parse_();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parseCONT();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parseCONT();\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseComment();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsePropertyEntry();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTrailingLine() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLine();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c3(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseComment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCommentCharacter();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseC();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseC();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentCharacter() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c6.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c7); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyEntry() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePropertyKey();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseKeyElementSeparator();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePropertyElement();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c8(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyKey() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseESCAPE();\n    if (s1 === peg$FAILED) {\n      if (peg$c10.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseCONT();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s3;\n        s4 = peg$c12(s1);\n      }\n      s3 = s4;\n      if (s3 === peg$FAILED) {\n        s3 = peg$parseESCAPE();\n        if (s3 === peg$FAILED) {\n          if (peg$c13.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\n          }\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseCONT();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c12(s1);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseESCAPE();\n          if (s3 === peg$FAILED) {\n            if (peg$c13.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c15(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyElement() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseCONT();\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c4();\n    }\n    s2 = s3;\n    if (s2 === peg$FAILED) {\n      s2 = peg$parseESCAPE();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseC();\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parseCONT();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c4();\n        }\n        s2 = s3;\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseESCAPE();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseC();\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseKeyElementSeparator() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCONT();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCONT();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parseCONT();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseCONT();\n        }\n        if (s4 !== peg$FAILED) {\n          if (peg$c19.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseWS();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseCONT();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseCONT();\n          }\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWS() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c22.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parseWS();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseWS();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c24); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseC() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (peg$c26.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c28(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNL() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c30) {\n      s0 = peg$c30;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s0 === peg$FAILED) {\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCONT() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c35;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNL();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseESCAPE() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    s2 = peg$parseCONT();\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c35;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n\n    // Whether to include blank and comment lines\n    //options.all = true;\n    // Whether to include separator\n    //options.sep = true;\n    // Whether to include indentation\n    //options.indent = true;\n    // Whether to include eol (end of line)\n    //options.eol = true;\n    // Whether to include the original logical line\n    //options.original = true;\n    // Whether to include location info\n    //options.location = true;\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","/**\n * Stringify properties object or entries to .properties file content.\n * @param {Array | Object} input Properties object or entries.\n * @param {Object} [options] Stringify options.\n * @returns {string} .properties file content.\n */\nexport function stringify(input, options) {\n  if (input instanceof Array) {\n    return stringifyFromEntries(input, options);\n  }\n\n  return stringifyFromProperties(input, options);\n}\n\n/**\n * Stringify entries to .properties file content.\n * @param {Array} entries Property entries.\n * @param {Object} [options] Stringify options, used when specified fields are\n *     not available in each entry.\n * @returns {string} .properties file content.\n */\nexport function stringifyFromEntries(entries, options) {\n  options = parseOptions(options);\n\n  let output = '';\n  /* Do we have no final EOL? */\n  let noeol = false;\n  /* Detected EOL in file */\n  let detectedEol = null;\n  for (const entry of entries) {\n    const { key, element } = entry;\n    const sep = entry.sep || options.sep;\n    const indent = entry.indent || '';\n    const eol = 'eol' in entry\n      ? entry.eol\n      : detectedEol || options.eol;   // Prefer detected eol\n\n    // Detect used EOL\n    if (entry.eol) {\n      detectedEol = entry.eol;\n    }\n\n    // Final line has no eol, and we are appending more lines.\n    // Need to add an eol first.\n    if (noeol) {\n      output += eol;\n    }\n\n    if (!eol) {\n      noeol = true;\n    }\n\n    // Prefer original if available\n    if (entry.original != null) {\n      output += entry.original;\n    } else {\n      // Output a blank line for blank and comment entry\n      output += key == null || element == null\n        ? '' : indent + key + sep + element;\n    }\n\n    // Keep noeol state\n    if (!noeol) {\n      output += eol;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Stringify properties object to .properties file content.\n * @param {Object} properties Properties object.\n * @param {Object} [options] Stringify options.\n * @returns {string} .properties file content.\n */\nexport function stringifyFromProperties(properties, options) {\n  options = parseOptions(options);\n\n  let output = '';\n  for (const key in properties) {\n    const element = properties[key];\n    if (typeof element === 'string') {\n      if (options.namespace) {\n        output += escapeKey(options.namespace);\n\n        // Add a dot after namespace if key is not empty\n        if (key) {\n          output += '.';\n        }\n      }\n      output += escapeKey(key) +\n          options.sep +\n          escapeElement(element) +\n          options.eol;\n    } else {\n      // Namespaced properties\n      const namespace = options.namespace\n        ? options.namespace + '.' + key\n        : key;\n      output += stringifyFromProperties(element,\n          Object.assign({}, options, { namespace: namespace }));\n    }\n  }\n\n  return output;\n}\n\n/**\n * Normalize user provided options.\n * @param {*} options Original options.\n * @returns {Object} Normalized options.\n */\nfunction parseOptions(options) {\n  options = options || {};\n  options.sep = options.sep || ' = ';\n  options.eol = options.eol || '\\r\\n';\n  return options;\n}\n\n/**\n * Escape special characters in property key.\n * @param {string} key Key to be mutated.\n * @returns {string} Escaped key.\n */\nfunction escapeKey(key) {\n  return key.replace(/[\\s\\S]/g, (match) => {\n    switch (match) {\n      case '=': return '\\\\=';\n      case ':': return '\\\\:';\n      case ' ': return '\\\\ ';\n      default: return escapeElement(match);\n    }\n  });\n}\n\n/**\n * Escape special characters in property element.\n * @param {string} element Element to be mutated.\n * @returns {string} Escaped element.\n */\nfunction escapeElement(element) {\n  return element.replace(/[\\s\\S]/g, (match) => {\n    switch (match) {\n      case '\\\\': return '\\\\\\\\';\n      case '\\f': return '\\\\f';\n      case '\\n': return '\\\\n';\n      case '\\r': return '\\\\r';\n      case '\\t': return '\\\\t';\n      default: return match;\n    }\n  });\n}\n"],"sourceRoot":""}