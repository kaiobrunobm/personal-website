{"version":3,"sources":["../src/properties.pegjs.js"],"names":["peg$subclass","child","parent","ctor","constructor","prototype","peg$SyntaxError","message","expected","found","location","name","Error","captureStackTrace","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","i","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","describeExpectation","type","describeExpected","descriptions","j","sort","slice","join","describeFound","peg$parse","input","options","peg$FAILED","peg$startRuleFunctions","PropertiesFile","peg$parsePropertiesFile","peg$startRuleFunction","peg$c0","lines","trailing","push","filter","x","undefined","peg$c1","line","eol","peg$c2","indent","all","key","element","sep","original","peg$c3","start","offset","peg$c4","peg$c5","peg$otherExpectation","peg$c6","peg$c7","peg$classExpectation","peg$c8","property","peg$c9","peg$c10","peg$c11","peg$c12","a","peg$c13","peg$c14","peg$c15","b","peg$c16","peg$c17","v","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","c","peg$c29","peg$c30","peg$c31","peg$literalExpectation","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$anyExpectation","peg$c39","peg$currPos","peg$savedPos","peg$posDetailsCache","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","peg$computeLocation","peg$buildStructuredError","error","peg$buildSimpleError","ignoreCase","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","peg$fail","s0","s1","s2","peg$parseFullLine","peg$parseTrailingLine","peg$parseLine","peg$parseNL","s3","s4","s5","peg$parse_","peg$parseCONT","peg$parseComment","peg$parsePropertyEntry","peg$parseCommentCharacter","peg$parseC","test","charAt","peg$parsePropertyKey","peg$parseKeyElementSeparator","peg$parsePropertyElement","peg$parseESCAPE","peg$parseWS","substr","module","exports","SyntaxError","parse"],"mappings":"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","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { PropertiesFile: peg$parsePropertiesFile },\n      peg$startRuleFunction  = peg$parsePropertiesFile,\n\n      peg$c0 = function(lines, trailing) {\n            // Add the trailing line, i.e. line without eol\n            if (trailing) lines.push(trailing);\n            // Filter out blank and comment lines\n            return lines.filter(x => x !== undefined);\n          },\n      peg$c1 = function(line, eol) {\n            if (!line) return;\n            if (options.eol) line.eol = eol;\n            return line;\n          },\n      peg$c2 = function(indent, line) {\n            if (!line) {\n              if (options.all) {\n                line = { key: null, element: null };\n                if (options.sep) line.sep = null;\n              } else {\n                return undefined;\n              }\n            }\n\n            if (options.indent) line.indent = indent;\n            if (options.eol) line.eol = null;\n            if (options.original) line.original = text();\n            if (options.location) line.location = location();\n\n            return line;\n          },\n      peg$c3 = function(line) {\n            // If the offset of start and end match, there is actually no trailing\n            // line; TrailingLine is matched in this case because a line itself\n            // (not counting eol) may contain no characters.\n            return location().start.offset === location().end.offset ?\n                undefined : line;\n          },\n      peg$c4 = function() {},\n      peg$c5 = peg$otherExpectation(\"CommentCharacter\"),\n      peg$c6 = /^[#!]/,\n      peg$c7 = peg$classExpectation([\"#\", \"!\"], false, false),\n      peg$c8 = function(key, sep, element) {\n            // Blank Line:\n            // No need to test element, as whenever there is an element, there is a separator.\n            // Note: Key and element can be empty at the same time.\n            if (!key && !sep) return;\n\n            // Property Entry:\n            // Return an empty string for key and/or element if empty.\n            var property = { key: key || \"\", element: element || \"\" };\n            if (options.sep) property.sep = sep;\n            return property;\n          },\n      peg$c9 = peg$otherExpectation(\"PropertyKey\"),\n      peg$c10 = /^[^\\r\\n\\\\:=]/,\n      peg$c11 = peg$classExpectation([\"\\r\", \"\\n\", \"\\\\\", \":\", \"=\"], true, false),\n      peg$c12 = function(a) {},\n      peg$c13 = /^[^ \\t\\f\\r\\n\\\\:=]/,\n      peg$c14 = peg$classExpectation([\" \", \"\\t\", \"\\f\", \"\\r\", \"\\n\", \"\\\\\", \":\", \"=\"], true, false),\n      peg$c15 = function(a, b) { return a + b.join(''); },\n      peg$c16 = peg$otherExpectation(\"PropertyElement\"),\n      peg$c17 = function(v) { return v.join(''); },\n      peg$c18 = peg$otherExpectation(\"KeyElementSeparator\"),\n      peg$c19 = /^[:=]/,\n      peg$c20 = peg$classExpectation([\":\", \"=\"], false, false),\n      peg$c21 = peg$otherExpectation(\"White Space\"),\n      peg$c22 = /^[ \\t\\f]/,\n      peg$c23 = peg$classExpectation([\" \", \"\\t\", \"\\f\"], false, false),\n      peg$c24 = peg$otherExpectation(\"White Spaces\"),\n      peg$c25 = peg$otherExpectation(\"Character\"),\n      peg$c26 = /^[^\\r\\n]/,\n      peg$c27 = peg$classExpectation([\"\\r\", \"\\n\"], true, false),\n      peg$c28 = function(c) {\n            // Ignore final dangling backslash\n            return c === \"\\\\\" ? undefined : c;\n          },\n      peg$c29 = peg$otherExpectation(\"Line Terminator\"),\n      peg$c30 = \"\\r\\n\",\n      peg$c31 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c32 = /^[\\n\\r]/,\n      peg$c33 = peg$classExpectation([\"\\n\", \"\\r\"], false, false),\n      peg$c34 = peg$otherExpectation(\"Line Continuation\"),\n      peg$c35 = \"\\\\\",\n      peg$c36 = peg$literalExpectation(\"\\\\\", false),\n      peg$c37 = peg$otherExpectation(\"Escape Sequence\"),\n      peg$c38 = peg$anyExpectation(),\n      peg$c39 = function() { return text(); },\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsePropertiesFile() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseFullLine();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseFullLine();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTrailingLine();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFullLine() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLine();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNL();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLine() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    s3 = peg$parse_();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parseCONT();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parseCONT();\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseComment();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsePropertyEntry();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTrailingLine() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLine();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c3(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseComment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCommentCharacter();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseC();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseC();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentCharacter() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c6.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c7); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyEntry() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePropertyKey();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseKeyElementSeparator();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePropertyElement();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c8(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyKey() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseESCAPE();\n    if (s1 === peg$FAILED) {\n      if (peg$c10.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseCONT();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s3;\n        s4 = peg$c12(s1);\n      }\n      s3 = s4;\n      if (s3 === peg$FAILED) {\n        s3 = peg$parseESCAPE();\n        if (s3 === peg$FAILED) {\n          if (peg$c13.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\n          }\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseCONT();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c12(s1);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseESCAPE();\n          if (s3 === peg$FAILED) {\n            if (peg$c13.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c15(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyElement() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseCONT();\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c4();\n    }\n    s2 = s3;\n    if (s2 === peg$FAILED) {\n      s2 = peg$parseESCAPE();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseC();\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parseCONT();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c4();\n        }\n        s2 = s3;\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseESCAPE();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseC();\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseKeyElementSeparator() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCONT();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCONT();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parseCONT();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseCONT();\n        }\n        if (s4 !== peg$FAILED) {\n          if (peg$c19.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseWS();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseCONT();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseCONT();\n          }\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWS() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c22.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parseWS();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseWS();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c24); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseC() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (peg$c26.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c28(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNL() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c30) {\n      s0 = peg$c30;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s0 === peg$FAILED) {\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCONT() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c35;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNL();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseESCAPE() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    s2 = peg$parseCONT();\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c35;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n\n    // Whether to include blank and comment lines\n    //options.all = true;\n    // Whether to include separator\n    //options.sep = true;\n    // Whether to include indentation\n    //options.indent = true;\n    // Whether to include eol (end of line)\n    //options.eol = true;\n    // Whether to include the original logical line\n    //options.original = true;\n    // Whether to include location info\n    //options.location = true;\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"file":"properties.pegjs.js"}