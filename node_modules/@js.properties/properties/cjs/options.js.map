{"version":3,"sources":["../src/options.js"],"names":["parseOptions","options","availableOptionNames","option"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;AAMO,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,oBAA/B,EAAqD;AAC1D;AACAD,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB,CAF0D,CAI1D;;AACA,MAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpBA,IAAAA,OAAO,GAAG,EAAV;;AADoB,+CAECC,oBAFD;AAAA;;AAAA;AAEpB,0DAA2C;AAAA,YAAhCC,MAAgC;AACzCF,QAAAA,OAAO,CAACE,MAAD,CAAP,GAAkB,IAAlB;AACD;AAJmB;AAAA;AAAA;AAAA;AAAA;;AAKpB,WAAOF,OAAP;AACD,GAXyD,CAa1D;AACA;;;AACA,MAAI,OAAOA,OAAO,CAAC,EAAD,CAAd,KAAuB,SAA3B,EAAsC;AAAA,gDACfC,oBADe;AAAA;;AAAA;AACpC,6DAA2C;AAAA,YAAhCC,OAAgC;;AACzC,YAAI,EAAEA,OAAM,IAAIF,OAAZ,CAAJ,EAA0B;AACxBA,UAAAA,OAAO,CAACE,OAAD,CAAP,GAAkBF,OAAO,CAAC,EAAD,CAAzB;AACD;AACF;AALmC;AAAA;AAAA;AAAA;AAAA;AAMrC;;AAED,SAAOA,OAAP;AACD","sourcesContent":["/**\n * Normalize options.\n * @param {*} options Options to be parsed; it can be object, boolean, null or undefined.\n * @param {!Array<string>} availableOptionNames All possible option names.\n * @returns {object} Normalized options.\n */\nexport function parseOptions(options, availableOptionNames) {\n  // Fix `null`, `false` as the options\n  options = options || {};\n\n  // `true` is a shortcut to turn all options on\n  if (options === true) {\n    options = {};\n    for (const option of availableOptionNames) {\n      options[option] = true;\n    }\n    return options;\n  }\n\n  // { '': true } is also a shorcut to turn all options on, while allow\n  // individual options to be turned off by setting them explicitly.\n  if (typeof options[''] === 'boolean') {\n    for (const option of availableOptionNames) {\n      if (!(option in options)) {\n        options[option] = options[''];\n      }\n    }\n  }\n\n  return options;\n}\n"],"file":"options.js"}